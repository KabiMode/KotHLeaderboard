<head>
    <style media="screen">
        @import url('https://fonts.googleapis.com/css?family=Luckiest+Guy');
        @keyframes animatedBackground {
        	from { background-position: 0 0; }
        	to { background-position: 768px 384px; } //x is 16 pixels, y is 32 pixels. final image is scaled 600%
        }
        body {
            margin: 0;
            font-family: 'Luckiest Guy', cursive;
            color: white;
            text-align: center;
            background-color: #4553b4;
            overflow: -moz-scrollbars-none;
            -webkit-text-stroke: 1px black;
        }
        body::-webkit-scrollbar { width: 0 !important }
        #major-wrapper{
            position: relative;
            overflow: hidden;
        }
        #major-wrapper:before {
            content: "";
            position: absolute;
            width: 600%;
            height: 600%;
            top: -300%;
            left: -300%;
            z-index: -1;
            background:#218dc6 url(/content/KotHBackground.png) 0 0 repeat;
            -webkit-transform: rotate(10deg);
            transform: rotate(10deg);
            animation: animatedBackground 12s linear infinite;
        }
        #header{
            width:100%;
            background-color: #4553b4;
            border-bottom:#22245b solid 10px;
            margin-bottom: 10px;
            position: relative;
        }
        #header h1{
            display: inline-block;
            font-size: 4em;
            margin-block-end: 0em;
            margin-block-start: .3em;
            text-shadow: 0 4px black;
            font-weight: initial;
        }
        #header > span {
            margin-bottom: .4em;
            display: inline-block;
        }
        #header input {
            display: table-row-group;
            background-color: transparent;
            font-family: inherit;
            color: inherit;
            font-size: 1.5em;
            border: none;
            width: 2.5em; /*width: 60px;*/
        }
        /*
        input[type=number]::-webkit-inner-spin-button {
            -webkit-appearance: none;
            cursor:pointer;
            display:block;
            width:8px;
            color: #333;
            text-align:center;
            position:relative;
        }
        input[type=number]:hover::-webkit-inner-spin-button {*/
        input[type=number]::-webkit-inner-spin-button {
            -webkit-appearance: none;
            cursor:pointer;
            display:block;
            text-align:center;
            position:relative;
            background: rgba(0, 0, 0, 0) url('/content/KotHSpinner.png') no-repeat 50% 50%; /*'http://i.stack.imgur.com/YYySO.png' */
            border-radius: 3px;
            background-size: 12px 28px;
            width: 12px;
            height: 28px;
            padding: 4px;
            position: relative;
            right: 0px;
            border-radius: 28px;
            image-rendering: -moz-crisp-edges;
            image-rendering: -webkit-crisp-edges;
            image-rendering: pixelated;
            image-rendering: crisp-edges;
        }
        #help-wrapper {
            height:100%;
            float: left;
            position: absolute;
        }
        #help {
            position: absolute;
            bottom: 0px;
            box-sizing: border-box;
            width: 50px;
            height: 50px;
            font-size: 25px;
            background-color: #218dc6;
            border: #1382ba solid 6px;
            border-radius: 50%;
            margin: 20px;
            display:table;
        }
        #help span {
            display: table-cell;
            vertical-align: middle;
        }
        #wrapper{
            display:inline-block;
            width: 90%;
            min-width: 700px;
            max-width: 1000px;
        }

        .tab-row{
            position: relative;
            display: inline-block;
            width: calc(100% - 60px);
        }
        .tab{
            display: inline-block;
            box-sizing: border-box;
            height: 168px;
            width: 33.333333333%;
            border-width: 24px;
            border-style:solid;
            /*border: 24px solid transparent;*/
            -webkit-border-image: 48 stretch; /* Safari 3.1-5 */
            -o-border-image: 48 stretch; /* Opera 11-12.1 */
            border-image: 48 stretch;
            background-clip: padding-box;
            border-radius: 25px 25px 0px 0px;
            cursor: pointer;
            font-size: 1.5em;
        }
        .tab:hover{
            -webkit-filter: saturate(10%);
            filter: saturate(10%);
            -webkit-filter: brightness(110%);
            filter: brightness(110%);
        }

        .tab img {
            height: 110px;
            -webkit-filter: drop-shadow(0px 3px 5px rgba(0,0,0,0.9));
            filter: drop-shadow(0px 3px 5px rgba(0,0,0,0.9));
        }

        #table-wrapper{
            display:inline-block;
            border-width: 42px;
            border-style:solid;
            /*border: 42px solid transparent;*/
            -webkit-border-image: url(/content/KotHBorderBack.png) 84 stretch; /* Safari 3.1-5 */
            -o-border-image: url(/content/KotHBorderBack.png) 84 stretch; /* Opera 11-12.1 */
            border-image: url(/content/KotHBorderBack.png) 84 stretch;
            background-color:#765c20;
            background-clip: padding-box;
            margin-top: -3px;
            z-index: 2;
            position: relative;
        }
        table {
            position: relative;
            table-layout: fixed;
            text-align: center;
            background-color: #3d15a1;
            border-collapse: separate;
            width: calc(100% + 48px);
            margin-left: -24px;
            margin-top: 3px;
            border-spacing:0 5px;
            text-shadow: 0 4px black;
            font-size: 1.5em;
            z-index: 2;
        }
        tr {
        }
        td {
            background-color: #5b7bf8;
            border: #86d5ff;
            border-style: groove;
            border-width: 6px 0;
        }
        tbody tr:first-of-type{
            border-spacing:0;
        }
        tbody tr:first-of-type td{
            font-size: 2em;
            background-color: #f85b5b;
            border-color: #ff8692;
            /*border-width: 0 0 6px 0;*/
        }
        tbody tr:first-of-type td:first-of-type{
            background-color: #fa4646;
        }
        tbody tr:first-of-type td:first-of-type::before{
            content: "";
            display: inline-block;
            background-image: url(/content/KotHCrown.png);
            background-size: 60px 43px;
            width: 60px;
            height: 43;
            -webkit-filter: drop-shadow(0px 3px 5px rgba(0,0,0,0.9));
            filter: drop-shadow(0px 3px 5px rgba(0,0,0,0.9));
        }
        tbody tr:first-of-type td:first-of-type::after{
            content: "the king";
            display: inline-block;
            width: 150;
            height: 43;
            font-size: .5em;
        }
        td:nth-child(1){
            width: 150px;
            background-color: #3774fb;
        }
        td:nth-child(2){
            padding-left: 20px;
            text-align: left;
        }
        td:nth-child(3){
            width: 200px;
        }
        td:nth-child(4){
            width: 50px;
        }
        td:nth-child(4) img{
            height: 35px;
            margin: 5px;
            -webkit-filter: drop-shadow(0px 0px 3px rgba(0,0,0,0.9));
            filter: drop-shadow(0px 0px 3px rgba(0,0,0,0.9));
        }
        #footer{
            position: sticky;
            z-index: 2;
            width:100%;
            box-sizing: border-box;
            background-color: #4553b4;
            border-top:#22245b solid 5px;
            margin-top: -39px;
            min-height: 100px;
            bottom: -100px;
        }
        #footer h1{
            display: inline-block;
            font-size: 1em;
            margin-block-end: .1em;
            margin-block-start: 1em;
            text-shadow: 0 4px black;
            font-weight: initial;
        }
        h1 a {
            text-shadow: 0 3px 2px black;
            text-decoration: none;
            color: #5b7bf8;
            -webkit-text-stroke: 1px black;
        }
        @media (max-width: 800px) { /*777px*/
            .extra {
                display: none;
            }
            #wrapper{
                margin: 10px 0 -39px 0;
            }
        }
    </style>
</head>
<div id="major-wrapper">
    <div id="header" class="extra">
        <div id="help-wrapper">
            <div id="help">
                <span>?</span>
            </div>
        </div>
        <h1>Leaderboard</h1>
        <br>
        <span>top: <input type="number" name="topCount" id="topCount" value="10" max="100" min="1"></span>
    </div>
    <div id="wrapper">
        <div id="tab-wrapper">
            <div class="tab-row" style="z-index:0;">
                <div class="tab"id="all"style="border-image-source:url(/content/KotHTabsAll.png);background-color:#fcfcfc;"><img src = "/content/KotHCrown.png"></div><!--
                --><div class="tab"id="none"style="border-image-source:url(/content/KotHTabsNone.png);background-color:#b2aaa9;"><img src = "https://cdn0.iconfinder.com/data/icons/free-social-media-set/24/discord-512.png"></div>
            </div>
            <div class="tab-row" style="margin-top:-21px;z-index:1;">
                <div class="tab"id="bravery"style="border-image-source:url(/content/KotHTabsBravery.png);background-color:#9c84ef;"><img src = "https://vignette.wikia.nocookie.net/hypesquad/images/4/41/BraveryLogo.png/revision/latest?cb=20180825044200"></div><!--
                --><div class="tab"id="brilliance"style="border-image-source:url(/content/KotHTabsBrilliance.png);background-color:#f47b67;"><img src = "https://vignette.wikia.nocookie.net/hypesquad/images/8/8f/BrillianceLogo.png/revision/latest?cb=20180825045035"></div><!--
                --><div class="tab"id="balance"style="border-image-source:url(/content/KotHTabsBalance.png);background-color:#45ddc0;"><img src = "https://vignette.wikia.nocookie.net/hypesquad/images/4/4f/BalanceLogo.png/revision/latest?cb=20180825045553"></div>
            </div>
        </div>
        <div id="table-wrapper">
            <table id="table">
                <tbody>
                </tbody>
            </table>
        </div>
    </div>
    <div id="footer" class="extra">
        <h1>This page was created by Kabi (@Kabi in the discord, <a target="_blank" href="https://www.twitch.tv/kabimode">@kabimode</a> elsewhere)</h1>
    </div>
</div>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script type="text/javascript">
count = (getUrlVars()["count"] == null || getUrlVars()["count"] == "" || getUrlVars()["count"] > 100 || getUrlVars()["count"] < 1) ? 100 : getUrlVars()["count"];
//window.onload = function() {
//    setUrlParameter(window.location.href, "count", count);
//};
flexFont = function () {
    var divs = document.getElementsByClassName("flexFont");
    for(var i = 0; i < divs.length; i++) {
        var relFontsize
        if (!isNaN(parseFloat(divs[i].style.fontSize))) {
            relFontsize = 2*(divs[i].offsetWidth-15)/(divs[i].getElementsByTagName('span')[0].offsetWidth*2/parseFloat(divs[i].style.fontSize)); //to make general, replace 2 with divs[i].DEFAULTFONTHEIGHTASDEFINEDINSTYLESHEET
        } else {
            relFontsize = 2*(divs[i].offsetWidth-15)/(divs[i].getElementsByTagName('span')[0].offsetWidth);
        }
        if (relFontsize < 2) {
            divs[i].style.fontSize = relFontsize+'em';
        } else {
            divs[i].style.fontSize = '2em';
        }
        //var relFontsize = divs[i].offsetWidth*2/558; //2/558
        //divs[i].style.fontSize = relFontsize+'em';
    }
};
window.onload = function(event) {
    flexFont();
};
window.onresize = function(event) {
    flexFont();
};

function numberWithCommas(x) {
    return x.toString().replace(/\B(?=(\d{3})+(?!\d))/g, ",");
}
function getval(path, callback ) {
    $.getJSON(path)
	.done(function(data) {
		callback(data);
	});
}
function sortByKey(array, key) {
    return array.sort(function(a, b) {
        var x = a[key]; var y = b[key];
        return ((x > y) ? -1 : ((x < y) ? 1 : 0));
    });
}
function getUrlVars() {
    var vars = {};
    var parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/gi, function(m,key,value) {
        vars[key] = value;
    });
    return vars;
}
function setUrlParameter(url, key, value) {

    var baseUrl = url.split('?')[0],
        urlQueryString = '?' + url.split('?')[1],
        newParam = key + '=' + value,
        params = '?' + newParam;

    // If the "search" string exists, then build params from it
    if (urlQueryString) {
        var updateRegex = new RegExp('([\?&])' + key + '[^&]*');
        var removeRegex = new RegExp('([\?&])' + key + '=[^&;]+[&;]?');

        if (typeof value === 'undefined' || value === null || value === '') { // Remove param if value is empty
            params = urlQueryString.replace(removeRegex, "$1");
            params = params.replace(/[&;]$/, "");

        } else if (urlQueryString.match(updateRegex) !== null) { // If param exists already, update it
            params = urlQueryString.replace(updateRegex, "$1" + newParam);

        } else { // Otherwise, add it to end of query string
            params = urlQueryString + '&' + newParam;
        }
    }

    // no parameter was set so we don't need the question mark
    params = params === '?' ? '' : params;

    return baseUrl + params;
}

function collapseJSON (data) {
    console.log("success");
    for (var i in data.one) {
        data['users'].push({"place":data.one[i].place,"elo":data.one[i].elo,"discordHandle":data.one[i].discordHandle});
    }
    for (var i in data.two) {
        data['users'].push({"place":data.two[i].place,"elo":data.two[i].elo,"discordHandle":data.two[i].discordHandle,"house":data.two[i].house});
    }
    for (var i in data.three) {
        data['users'].push({"place":data.three[i].place,"elo":data.three[i].elo,"discordHandle":data.three[i].discordHandle,"house":data.three[i].house});
    }
    for (var i in data.four) {
        data['users'].push({"place":data.four[i].place,"elo":data.four[i].elo,"discordHandle":data.four[i].discordHandle,"house":data.four[i].house});
    }
    delete data["one"];
    delete data["two"];
    delete data["three"];
    delete data["four"];
    data.users = sortByKey(data.users, "elo");
    console.log(data);
    displayLeaders(data);
    //displayLeaders();
}

function displayLeaders(leaders){
    var table = document.getElementById("table");
    table.innerHTML = "";
    for (var i = 0; i < leaders.users.length; i++) {
        var row = table.insertRow(i);
        var cell1 = row.insertCell(0);
        var cell2 = row.insertCell(1);
        var cell3 = row.insertCell(2);
        var cell4 = row.insertCell(3);
        if (i == 0) {
            cell1.innerHTML = "<br>" + (i+1) + "<br>"; //cell1.innerHTML = "<br>" + leaders.users[i].place + "<br>";
            cell2.classList.add("flexFont");
            cell2.innerHTML = "<span>@"+leaders.users[i].discordHandle+"</span>";
        } else {
            cell1.innerHTML = i+1; //cell1.innerHTML = leaders.users[i].place;
            cell2.innerHTML = "@"+leaders.users[i].discordHandle;
        }
        cell3.innerHTML = numberWithCommas(leaders.users[i].elo);
        if (leaders.users[i].house == "balance") {
            cell4.innerHTML = '<img src = "https://vignette.wikia.nocookie.net/hypesquad/images/4/4f/BalanceLogo.png/revision/latest?cb=20180825045553">'
        } else if (leaders.users[i].house == "bravery") {
            cell4.innerHTML = '<img src = "https://vignette.wikia.nocookie.net/hypesquad/images/4/41/BraveryLogo.png/revision/latest?cb=20180825044200">'
        } else if (leaders.users[i].house == "brilliance") {
            cell4.innerHTML = '<img src = "https://vignette.wikia.nocookie.net/hypesquad/images/8/8f/BrillianceLogo.png/revision/latest?cb=20180825045035">'
        } else {
            cell4.innerHTML = '<img src = "https://cdn0.iconfinder.com/data/icons/free-social-media-set/24/discord-512.png">';
        }
        //cell4.innerHTML = leaders.users[i].house;

        //images
        //Balance: https://vignette.wikia.nocookie.net/hypesquad/images/4/4f/BalanceLogo.png/revision/latest?cb=20180825045553
        //Bravery: https://vignette.wikia.nocookie.net/hypesquad/images/4/41/BraveryLogo.png/revision/latest?cb=20180825044200
        //Brilliance: https://vignette.wikia.nocookie.net/hypesquad/images/8/8f/BrillianceLogo.png/revision/latest?cb=20180825045035
    }
    flexFont()
}
function loadLeaders(ladder){
    console.log(count);
    //var count = (getUrlVars()["count"] == "" || getUrlVars()["count"] > 100 || getUrlVars()["count"] < 1) ? 100 : getUrlVars()["count"];
    var result;
    if (ladder == "" || ladder == null) {
        var newJSON = {"users":[],"one":[],"two":[],"three":[],"four":[]};
        getval("https://api.kingofthehat.com/leaderboard" + "?count=" + count, function(newData){ //./data/leaderboard
            //$.extend(newJSON, newData.users );
            //Object.assign(newJSON.users, newData.users);
            $.extend( newJSON.one, newData.users );
            //console.log(newData)
            //console.log(newJSON)
            if (newJSON.one.length == count && newJSON.two.length == count && newJSON.three.length == count && newJSON.four.length == count) {
                collapseJSON(newJSON);
            }
        });
        getval("https://api.kingofthehat.com/leaderboard?house=balance" + "&count=" + count, function(newData){//./data/leaderboard?house=balance
            $.extend( newJSON.two, newData.users );
            //console.log(newData)
            //console.log(newJSON)
            if (newJSON.one.length == count && newJSON.two.length == count && newJSON.three.length == count && newJSON.four.length == count) {
                collapseJSON(newJSON);
            }
        });
        getval("https://api.kingofthehat.com/leaderboard?house=bravery" + "&count=" + count, function(newData){//./data/leaderboard?house=bravery
            $.extend( newJSON.three, newData.users );
            //console.log(newData)
            //console.log(newJSON)
            if (newJSON.one.length == count && newJSON.two.length == count && newJSON.three.length == count && newJSON.four.length == count) {
                collapseJSON(newJSON);
            }
        });
        getval("https://api.kingofthehat.com/leaderboard?house=brilliance" + "&count=" + count, function(newData){//./data/leaderboard?house=brilliance
            $.extend( newJSON.four, newData.users );
            //console.log(newJSON)
            //console.log(newData)
            if (newJSON.one.length == count && newJSON.two.length == count && newJSON.three.length == count && newJSON.four.length == count) {
                collapseJSON(newJSON);
            }
        });
    } else if (ladder=="none") {
        getval("https://api.kingofthehat.com/leaderboard" + "?count=" + count, displayLeaders); //"./data/leaderboard"
    } else {
        if (ladder == "balance" || ladder == "bravery" || ladder == "brilliance") {
            getval("https://api.kingofthehat.com/leaderboard?house=" + ladder + "&count=" + count, displayLeaders); //"./data/leaderboard?house=" + ladder
        } else {
                getval("https://api.kingofthehat.com/leaderboard" + "?count=" + count, displayLeaders); //"./data/leaderboard"
        }
    }
        console.log(result);
    return result;
}

function loadMatchNumbers(data){
    console.log(data);
    document.getElementById("bravery").innerHTML = document.getElementById("bravery").innerHTML + "<br><span>"+numberWithCommas(data.bravery)+"</span>";
    document.getElementById("balance").innerHTML = document.getElementById("balance").innerHTML + "<br><span>"+numberWithCommas(data.balance)+"</span>";
    document.getElementById("brilliance").innerHTML = document.getElementById("brilliance").innerHTML + "<br><span>"+numberWithCommas(data.brilliance)+"</span>";
}
//var leaders = JSON.parse('{"users":[{"place":1,"elo":160104,"discordHandle":"Greenshrum","house":"brilliance"},{"place":2,"elo":151116,"discordHandle":"DPS Abook","house":"brilliance"},{"place":3,"elo":146664,"discordHandle":"Cheezy","house":"brilliance"},{"place":4,"elo":144480,"discordHandle":"Soren","house":"brilliance"},{"place":5,"elo":141540,"discordHandle":"Kabi","house":"brilliance"},{"place":6,"elo":140616,"discordHandle":"PlasmaPlasma (Creska)","house":"brilliance"},{"place":7,"elo":140112,"discordHandle":"r3lax (silkyskilz)","house":"brilliance"},{"place":8,"elo":139524,"discordHandle":"Fennrir","house":"brilliance"},{"place":9,"elo":138684,"discordHandle":"The_Wicked_I","house":"brilliance"},{"place":10,"elo":137844,"discordHandle":"eliterate","house":"brilliance"}]}');

//loadLeaders("brilliance");
//loadLeaders("balance");yrameter(window.location.href, "house", 'none'));});

document.getElementById("all").addEventListener("click", function() {loadLeaders("");history.pushState(null, '', setUrlParameter(window.location.href, "house", ''));});
document.getElementById("none").addEventListener("click", function() {loadLeaders("none");history.pushState(null, '', setUrlParameter(window.location.href, "house", 'none'));});
document.getElementById("balance").addEventListener("click", function() {loadLeaders("balance");history.pushState(null, '', setUrlParameter(window.location.href, "house", 'balance'));});
document.getElementById("bravery").addEventListener("click", function() {loadLeaders("bravery");history.pushState(null, '', setUrlParameter(window.location.href, "house", 'bravery'));});
document.getElementById("brilliance").addEventListener("click", function() {loadLeaders("brilliance");history.pushState(null, '', setUrlParameter(window.location.href, "house", 'brilliance'));});
loadLeaders(getUrlVars()["house"]);
document.getElementById("topCount").value = count;//(getUrlVars()["count"] == "" || getUrlVars()["count"] > 100 || getUrlVars()["count"] < 1) ? 100 : getUrlVars()["count"];
getval("https://api.kingofthehat.com/houses/hypesquad", loadMatchNumbers);
document.getElementById("topCount").addEventListener("input", function() {
    count = document.getElementById("topCount").value;
    history.pushState(null, '', setUrlParameter(window.location.href, "count", count));
    loadLeaders(getUrlVars()["house"]);
});

</script>
