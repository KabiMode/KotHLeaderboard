<head>
    <script async src="https://www.googletagmanager.com/gtag/js?id=UA-135672746-1"></script>
    <script>
        window.dataLayer = window.dataLayer || [];
        function gtag(){dataLayer.push(arguments);}
        gtag('js', new Date());

        gtag('config', 'UA-135672746-1');
    </script>
    <META name="viewport" content="initial-scale=0.5, user-scalable=no">
    <link rel="stylesheet" type="text/css" href="/content/style.css">
    <style media="screen">
    #header input {
        display: table-row-group;
        background-color: #EACC50;
        font-family: inherit;
        color: inherit;
        font-size: 1.5em;
        border: #F6EBA6 solid 3px;
        border-radius: 6px;
        padding: 3px;
        margin-bottom: .4em;
        cursor: pointer;
    }
    #wrapper{
        display:inline-block;
        box-sizing: border-box;
        width: 90%;
        min-width: 782px;
        max-width: 1300px;
        text-align: left;
        /*pixel outline*/
        border-width: 42px;
        border-style: groove;
        border-color: #EACC50;
        border-radius: 42px;
        -webkit-border-image: url(/content/KotHBorderBackFull.png) 84 stretch; /* Safari 3.1-5 */
        -o-border-image: url(/content/KotHBorderBackFull.png) 84 stretch; /* Opera 11-12.1 */
        border-image: url(/content/KotHBorderBackFull.png) 84 stretch;
        background-color:#7C5620;
        background-clip: padding-box;
        z-index: 2;
        position: relative;
    }
    #list-wrapper {
        margin: 24px 0px;
    }
    .tier{
        margin: 3px 0px;
    }
    .tier > div:nth-child(1){
        width: 100px;
        height: 100px;
        display: inline-block;
        position: relative;
        float: left;
        margin: 0px 0px 0px 0px;
        box-sizing: border-box;
        font-size: 60px;
        text-shadow: 0 4px black;
        text-align: center;
        vertical-align: middle;
        border: #404040 outset;
        border-width: 3px 0px 3px 3px;
        border-radius: 20px 0px 0px 20px;
                -moz-user-select: none; /* Firefox */
         -ms-user-select: none; /* Internet Explorer */
        -khtml-user-select: none; /* KHTML browsers (e.g. Konqueror) */
        -webkit-user-select: none; /* Chrome, Safari, and Opera */
        -webkit-touch-callout: none; /* Disable Android and iOS callouts*/
    }

    .tier > div:nth-child(1) span{
        position: absolute;
        display: block;
        top: 50%;
        transform: translateY(-50%);
        width: 100%;
        -webkit-text-stroke: 2px black;
    }
    .tier-zone{ /* .tier > div:nth-child(2) */
        box-sizing: border-box;
        min-height: 140px;
        padding: 10px;
        background-color: #696969;
        vertical-align: middle;
        border-radius: 0px 20px 20px 20px;
        margin-left: 97px;
        border: #404040 outset;
        border-width: 3px;
    }
    .character{
        display: inline-block;
        height: 100px;
        position: relative;
        overflow: hidden;
        cursor: grab;
    }
    .character:active {
        cursor: grabbing;
        cursor: -moz-grabbing;
        cursor: -webkit-grabbing;
    }
    .character img{
        display: inline-block;
        height: 100%;
        pointer-events: none;
    }
    .character.hovered::before, .character.unhovered::after{
        content:"";
        display: inline-block;
        height: 80%;
        margin: 10% 3px;
        border: #218DC6 solid 2px;
        border-radius: 2px;
        box-sizing: border-box;
        width: 2px;
    }
    .character.hidden img{
        display: none;
    }
    .tier-zone.hovered::before{
        content: "";
        display: inline-block;
        height: 91px;
        margin: 14px 3px;
        border: #218DC6 solid 2px;
        border-radius: 2px;
        box-sizing: border-box;
        width: 2px;
        position: absolute;
    }
    #alert {
        position:fixed;
        z-index: 3;
        padding: 25px;
        left:0;
        background-color: #4553B4;
        border:#22245b solid;
        border-width: 3px 3px 3px 0;
        border-radius: 0 12px 12px 0;
        margin-top: 20px;
        -webkit-transition: left 0.5s ease-in-out; /* Safari */
        transition: left 0.5s ease-in-out;
    }
    #footer {
        margin-top: 10px
    }
    </style><!--
    <meta content='/content/portraits/Portrait_Zoe.png' property='og:image'> {{metacode}}
    <meta content='/tier/{{metacode}}' property='og:image'> {{metacode}} -->
    <meta content='/tier/{{metacode}}' property='og:image'>
    <meta name="theme-color" content="#EACC50">
    <link type="application/json+oembed" href="{{host}}/content/tieroembed.json"/>
</head>
<div id="major-wrapper">
    <div id="header" class="extra">
    <div id="alert" style="left:-300px">
        Link copied to clipboard!
    </div>
        <h1>Tier List</h1>
        <br>
        <input type="button" name="share-button" id="share-button" value="Share this list">
    </div>
    <div id="wrapper">
        <div id="list-wrapper">
            <div class="tier">
                <div style="background-color:#FF7F7F;"><span>S</span></div><div id="S" class="tier-zone"></div> <!--<div class="character" id="Zoe" title="Zoe" draggable="true"><img src="/content/portraits/Portrait_Zoe.png" alt="Zoe"></div>-->
            </div>
            <div class="tier">
                <div style="background-color:#FFBF7F;"><span>A</span></div><div id="A" class="tier-zone"></div>
            </div>
            <div class="tier">
                <div style="background-color:#FFDF7F;"><span>B</span></div><div id="B" class="tier-zone"></div>
            </div>
            <div class="tier">
                <div style="background-color:#FFFF7F;"><span>C</span></div><div id="C" class="tier-zone"></div>
            </div>
            <div class="tier">
                <div style="background-color:#BFFF7F;"><span>D</span></div><div id="D" class="tier-zone"></div>
            </div>
            <div class="tier">
                <div style="background-color:#7FFF7F;"><span>E</span></div><div id="E" class="tier-zone"></div>
            </div>
        </div>
    </div>
    <div id="footer" class="extra">
        <h1>This page was created by Kabi (@Kabi in the discord, <a target="_blank" href="https://www.twitch.tv/kabimode">@kabimode</a> elsewhere)</h1>
    </div>
</div>
<!--<img src="/tier/{{metacode}}" alt="">-->

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js"></script>
<script src="/content/characters.js"></script>
<!--<script src="/content/processing.js"></script>-->
<script src="/content/parse-meta.js"></script>
<!--<script src="/node_modules/html2canvas/dist/html2canvas.min.js"></script>-->
<script type="text/javascript">
function touchHandler(event) {
    event.preventDefault();
    var touch = event.changedTouches[0];

    var simulatedEvent = document.createEvent("DragEvent");
        simulatedEvent.initMouseEvent({
        //touchstart: "mousedown",
        //touchmove: "mousemove",
        //touchend: "mouseup"
        touchstart: "dragstart",
        touchmove: "dragover",
        touchend: "drop"
    }[event.type], true, true, window, 1,
        touch.screenX, touch.screenY,
        touch.clientX, touch.clientY, false,
        false, false, false, 0, null);

    custAlert(event.type);
    touch.target.dispatchEvent(simulatedEvent);
    //event.preventDefault();
}

function copyToClipboard(str) {
  const el = document.createElement('textarea');
  el.value = str;
  el.setAttribute('readonly', '');
  el.style.position = 'absolute';
  el.style.left = '-9999px';
  document.body.appendChild(el);
  el.select();
  document.execCommand('copy');
  document.body.removeChild(el);
};
function custAlert(str) {
    var box = document.getElementById("alert");
    box.innerHTML = str;
    box.style.left = "";
    setTimeout(function(){box.style.left = "-300px"}, 3000);
}
function updateMeta() {
    var newMeta = {"S":[],"A":[],"B":[],"C":[],"D":[],"E":[]}
    var tiers = document.getElementsByClassName("tier-zone");
    for (var i = 0; i < tiers.length; i++) {
        for (var j = 0; j < tiers[i].children.length; j++) {
            newMeta[tiers[i].id].push(tiers[i].children[j].id)
        }
    }
    return newMeta;
}

function dragStart(ev) { //drag
    //console.log(ev.target.id);'
    if (ev.dataTransfer != null) {
        ev.dataTransfer.setData("ID", ev.target.id);
        setTimeout(function(){ ev.target.classList.add("hidden"); }, 0);
        console.log("desktop");
    } else if (true) {
        console.log("mobile");
        //custAlert("mobile");
    }
}
function drop(ev) {
    ev.preventDefault();
    if (ev.dataTransfer != null) {
        var data = ev.dataTransfer.getData("ID");
        //
        if (ev.target.classList.contains("character")) {
            ev.target.parentNode.insertBefore(document.getElementById(data), ev.target);
            ev.target.classList.remove("hovered");
        } else if (ev.target.classList.contains("tier-zone")){
            ev.target.classList.remove("hovered");
            ev.target.appendChild(document.getElementById(data));
            ev.target.lastChild.classList.remove("unhovered");
            if (ev.target.childElementCount > 1) {
                ev.target.children[ev.target.childElementCount-2].classList.remove("unhovered");
            }
        }
    } else {
        var data = ev.path[0].id;
        var target = document.elementFromPoint(ev.pageX, ev.pageY);
        //
        if (target.classList.contains("character")) {
            target.parentNode.insertBefore(document.getElementById(data), target);
            target.classList.remove("hovered");
        } else if (target.classList.contains("tier-zone") && !document.getElementById(data).classList.contains("tier-zone")){
            target.classList.remove("hovered");
            target.appendChild(document.getElementById(data));
            target.lastChild.classList.remove("unhovered");
            if (target.childElementCount > 1) {
                target.children[target.childElementCount-2].classList.remove("unhovered");
            }
        }
    }
    //console.log(updateMeta());
    history.pushState(null, '', "/tierlist/"+encryptMeta(updateMeta()));
}
function dragEnd(ev) {
    ev.preventDefault();
    var data = ev.target.id; // ev.dataTransfer.getData("ID")
    document.getElementById(data).classList.remove("hidden");
}
function dragOver(ev) { //allowDrop
    ev.preventDefault();
    //console.log(ev.originalEvent.dataTransfer.types.includes("id")); make following code conditional on this upon moving to jQuery

    if (ev.dataTransfer != null) {
        if (ev.target.classList.contains("character")) {
            ev.target.classList.add("hovered");
        } else if (ev.target.classList.contains("tier-zone")) {
            if (ev.target.childElementCount == 0) {
                ev.target.classList.add("hovered");
            } else {
                ev.target.lastChild.classList.add("unhovered");
            }
        }
    }
}
function dragLeave(ev) { //allowDrop
    ev.preventDefault();
    if (ev.target.classList.contains("character")) {
        ev.target.classList.remove("hovered");
    } else if (ev.target.classList.contains("tier-zone")){
        if (ev.target.childElementCount == 0) {
            ev.target.classList.remove("hovered");
        } else {
            ev.target.lastChild.classList.remove("unhovered");
        }
    }
}
/*
var characterElements = document.getElementsByClassName("character");
for (var i = 0; i < characterElements.length; i++) {
    characterElements[i].addEventListener("dragstart", dragStart);
    characterElements[i].addEventListener("touchstart", touchHandler, {passive: false});//true);
}
*/
for (var i = 0; i < document.getElementsByClassName("tier-zone").length; i++) {
    document.getElementsByClassName("tier-zone")[i].addEventListener("drop", drop);
    document.getElementsByClassName("tier-zone")[i].addEventListener("dragover", dragOver); //pure JavaScript equivalent of commented jQuery line below
    document.getElementsByClassName("tier-zone")[i].addEventListener("dragleave", dragLeave);
    //document.getElementById("wrapper").addEventListener("touchmove", touchHandler, {passive: false});//true);
    //document.getElementById("wrapper").addEventListener("touchend", touchHandler, {passive: false});//true);
}
//$(".tier-zone").on("dragover", dragOver); move to jQuery to disallow non-".character" elements from triggering drag visual
document.body.addEventListener("dragend", dragEnd);

//place character in tier insertCharacter("Forest", "A")
function insertCharacter(character, tier) {
    if(characters.character.hasOwnProperty(character)){
        //document.getElementById(tier).innerHTML += '<div class="character" id="'+ character +'" title="'+ characters[character].name +'" draggable="true"><img src="/content/portraits/'+ characters[character].image +'" alt="'+ characters[character].name +'"></div>';
        var newChar = document.createElement("div");
        document.getElementById(tier).appendChild(newChar);
        newChar.classList.add("character");
        newChar.id = character;
        newChar.title = characters.character[character].name;
        newChar.draggable = 'true';
        newChar.innerHTML = '<img src="/content/portraits/'+ characters.character[character].image +'" alt="'+ characters.character[character].name +'">';
        newChar.addEventListener("dragstart", dragStart);
        //newChar.addEventListener("touchstart", touchHandler, {passive: false});//true);
        //newChar.addEventListener("touchmove", dragStart);
        //console.log(newChar);
    }
}
/*
var meta = {
    "S": ["Zoe","HatGang","ProfessorGenius"],
    "A": ["DarkBday","Insignia"],
    "B": ["CaptainHat","Fatcat","Forest","Kiara","KidCat"],
    "C": ["Bday","Random"],
    "D": ["Cole","Gus","WashingMachine"],
    "E": ["Snapback"]
}
*/
var meta = {
    "S": ["Zoe"],
    "A": ["DarkBday","Insignia"],
    "B": ["CaptainHat","Fatcat","Forest","KidCat"],
    "C": ["Kiara","Bday"],
    "D": ["WashingMachine","Cole","Gus"],
    "E": ["Snapback"]
}
function insertMeta(json) {
    for (var i in json) {
        for (var j in json[i]) {
            //console.log(j);
            insertCharacter(json[i][j], i)
        }
    }
}

//
//insertCharacter("Zoe", "S")
//insertCharacter("Forest", "A")
//insertCharacter("Cole", "B")
var pathname = window.location.pathname.split("/");
var metacode = pathname[pathname.length-1];
if (pathname.length > 2 && metacode != "") {
    meta = decryptMeta(metacode);
}
insertMeta(meta);

document.getElementById("share-button").addEventListener("click", function(){
    copyToClipboard(window.location.href);
    custAlert("link copied to clipboard");
});
document.getElementById("wrapper").addEventListener("touchstart", touchHandler, {passive: false});//true);
document.getElementById("wrapper").addEventListener("touchmove", touchHandler, {passive: false});//true);
document.getElementById("wrapper").addEventListener("touchend", touchHandler, {passive: false});//true);
//document.getElementById("wrapper").addEventListener("touchcancel", touchHandler, {passive: false});//true);
</script>
